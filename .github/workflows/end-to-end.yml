name: End-to-end tests (Pull Request)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: end-to-end-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
    end-to-end:
        name: Build .NET and Analyse with SonarCloud
        runs-on: ubuntu-latest
        steps:
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'zulu'

            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   uses: actions/setup-dotnet@v4
                with:
                    dotnet-version: '9.x'

            -   name: Cache SonarQube Cloud packages
                uses: actions/cache@v4
                with:
                    path: ~/.sonar/cache
                    key: ${{ runner.os }}-sonar
                    restore-keys: ${{ runner.os }}-sonar

            -   name: Cache SonarQube Cloud scanner
                id: cache-sonar-scanner
                uses: actions/cache@v4
                with:
                    path: ./.sonar/scanner
                    key: ${{ runner.os }}-sonar-scanner
                    restore-keys: ${{ runner.os }}-sonar-scanner

            -   name: Install SonarQube Cloud scanner
                if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
                shell: bash
                run: |
                    mkdir -p ./.sonar/scanner
                    dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
            -   name: Install Coverage Tool
                shell: bash
                run: |
                    dotnet tool install --global dotnet-coverage
            -   name: Prepare SonarCloud analysis
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                shell: bash
                run: >
                    ./.sonar/scanner/dotnet-sonarscanner begin
                    /k:"team-golfslag_SURFSharekit.Net" /o:"team-golfslag"
                    /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
                    /d:sonar.host.url="https://sonarcloud.io"
                    /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
            -   name: Build the project
                shell: bash
                run: |
                    dotnet build --no-incremental
            -   name: Test the project
                shell: bash
                run: |
                    dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
            -   name: Build and analyze
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                shell: bash
                run: |
                    ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"